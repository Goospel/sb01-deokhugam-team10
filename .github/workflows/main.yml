name: Build and Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION:                      ap-northeast-2
  AWS_S3_BUCKET:                   deockhugam
  AWS_CODE_DEPLOY_APPLICATION:     deokhugam-codedeploy
  AWS_CODE_DEPLOY_GROUP:           deokhugam-application

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3) application.yml 등 환경설정 파일 생성
      - name: make application.yml
        run: |
          mkdir -p src/main/resources
          cat <<EOF > src/main/resources/application.yml
          ${{ secrets.APPLICATION }}
          EOF
          cat <<EOF > src/main/resources/application-common.yml
          ${{ secrets.COMMON }}
          EOF
          cat <<EOF > src/main/resources/application-prod.yml
          ${{ secrets.PROD }}
          EOF
        shell: bash

      # 4) gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      # 5) 빌드 & 테스트
      - name: Build and Test
        run: ./gradlew build -x test -x checkstyleMain -x checkstyleTest
        shell: bash

      # 6) ZIP 파일 생성
      - name: Make zip file
        run: zip -r ${GITHUB_SHA}.zip .
        shell: bash

      # 7) AWS 자격증명 설정
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 8) S3에 업로드
      - name: Upload to S3
        run: |
          aws s3 cp ${GITHUB_SHA}.zip s3://${{ env.AWS_S3_BUCKET }}/${GITHUB_SHA}.zip
        shell: bash

      # 9) CodeDeploy 배포 트리거
      - name: EC2에 배포
        run: |
          aws deploy create-deployment \
            --application-name    ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name   ${{ env.AWS_CODE_DEPLOY_GROUP }} \
            --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=${GITHUB_SHA}.zip,bundleType=zip
        shell: bash
